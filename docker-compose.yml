# version: "3.9"  # optional since v1.27.0
services:
  postgres:
    image: postgres:14.1-alpine
    restart: always
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: s3cret
      POSTGRES_DB: postgres
    volumes:
    - ./docker_volumes/postgresql/data:/var/lib/postgresql/data #local_machine:internal_docker
    ports:
    - 5432:5432 #local_machine_port:internal_docker_container_port
  
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - ./docker_volumes/zookeeper/data:/var/lib/zookeeper/data
      - ./docker_volumes/zookeeper/log:/var/lib/zookeeper/log
  
  kafka:
    image: confluentinc/cp-kafka:7.3.2
    container_name: kafka
    ports:
      # To learn about configuring Kafka for access across networks see
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - ./docker_volumes/kafka:/var/lib/kafka/data
    
  kafka-ui:
    image: provectuslabs/kafka-ui:53a6553765a806eda9905c43bfcfe09da6812035
    container_name: kafka-ui
    restart: always
    ports:
      - 9080:8080
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
  
  elastic-search:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.3
    container_name: elastic-search
    ports:
      - 9200:9200

  redis:
    image: redis:7.2.3-alpine
    restart: always
    ports:
      - '6379:6379'
    expose:
      - '6379'
    volumes: 
      - ./docker_volumes/data/redis:/data
  
  mongodb:
    image: mongo:5.0.3
    restart: always
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mongo
      MONGO_INITDB_DATABASE: admin
    volumes:
    - ./docker_volumes/mongo/data:/data/db
    ports:
    - 27017:27017

  
  rabbitmq: # username/password : guest/guest
    image: rabbitmq:3.10.5-management
    restart: always
    container_name: rabbitmq
    ports:
    - 5672:5672
    - 15672:15672
    volumes:
        - ./docker_volumes/rabbitmq/data/:/var/lib/rabbitmq/
        - ./docker_volumes/rabbitmq/log/:/var/log/rabbitmq